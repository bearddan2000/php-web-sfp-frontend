(this.webpackJsonp=this.webpackJsonp||[]).push([[29],{105:function(e,t,n){"use strict";n(47);var i=n(6),a=n(137),r={name:"UserAvatarLink",components:{GlLink:i.t,userAvatarImage:a.a},directives:{GlTooltip:i.J},props:{linkHref:{type:String,required:!1,default:""},imgSrc:{type:String,required:!1,default:""},imgAlt:{type:String,required:!1,default:""},imgCssClasses:{type:String,required:!1,default:""},imgSize:{type:Number,required:!1,default:20},tooltipText:{type:String,required:!1,default:""},tooltipPlacement:{type:String,required:!1,default:"top"},username:{type:String,required:!1,default:""}},computed:{shouldShowUsername:function(){return this.username.length>0},avatarTooltipText:function(){return this.shouldShowUsername?"":this.tooltipText}}},o=n(2),l=Object(o.a)(r,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("gl-link",{staticClass:"user-avatar-link",attrs:{href:e.linkHref}},[n("user-avatar-image",{attrs:{"img-src":e.imgSrc,"img-alt":e.imgAlt,"css-classes":e.imgCssClasses,size:e.imgSize,"tooltip-text":e.avatarTooltipText,"tooltip-placement":e.tooltipPlacement}},[e._t("default")],2),e.shouldShowUsername?n("span",{directives:[{name:"gl-tooltip",rawName:"v-gl-tooltip"}],staticClass:"js-user-avatar-link-username",attrs:{title:e.tooltipText,"tooltip-placement":e.tooltipPlacement}},[e._v(e._s(e.username))]):e._e(),e._t("avatar-badge")],2)}),[],!1,null,null,null);t.a=l.exports},113:function(e,t,n){"use strict";var i=n(6),a=n(111),r=(n(39),{directives:{GlTooltip:i.J},mixins:[a.a],props:{time:{type:String,required:!0},tooltipPlacement:{type:String,required:!1,default:"top"},cssClass:{type:String,required:!1,default:""}}}),o=n(2),l=Object(o.a)(r,(function(){var e=this.$createElement;return(this._self._c||e)("time",{directives:[{name:"gl-tooltip",rawName:"v-gl-tooltip.viewport",value:{placement:this.tooltipPlacement},expression:"{ placement: tooltipPlacement }",modifiers:{viewport:!0}}],class:this.cssClass,attrs:{title:this.tooltipTitle(this.time)},domProps:{textContent:this._s(this.timeFormatted(this.time))}})}),[],!1,null,null,null);t.a=l.exports},140:function(e,t,n){"use strict";var i=n(6),a={name:"ClipboardButton",directives:{GlTooltip:i.J},components:{GlButton:i.d,GlIcon:i.s},props:{text:{type:String,required:!0},gfm:{type:String,required:!1,default:null},title:{type:String,required:!0},tooltipPlacement:{type:String,required:!1,default:"top"},tooltipContainer:{type:[String,Boolean],required:!1,default:!1},cssClass:{type:String,required:!1,default:"btn-default"}},computed:{clipboardText:function(){return null!==this.gfm?JSON.stringify({text:this.text,gfm:this.gfm}):this.text}}},r=n(2),o=Object(r.a)(a,(function(){var e=this.$createElement,t=this._self._c||e;return t("gl-button",{directives:[{name:"gl-tooltip",rawName:"v-gl-tooltip",value:{placement:this.tooltipPlacement,container:this.tooltipContainer},expression:"{ placement: tooltipPlacement, container: tooltipContainer }"}],class:this.cssClass,attrs:{title:this.title,"data-clipboard-text":this.clipboardText}},[t("gl-icon",{attrs:{name:"copy-to-clipboard"}})],1)}),[],!1,null,null,null);t.a=o.exports},2508:function(e,t,n){"use strict";n.r(t);n(18),n(59);var i=n(9),a=n(629),r=n(17),o=(n(15),n(20),n(23),n(25),n(28),n(32),n(37),n(27),n(10),n(16),n(26),n(8)),l=n(1),s=n(6),d=n(2746),c=n.n(d),u={apollo:{ref:{query:c.a}},data:function(){return{ref:""}}},m=n(2550),f=n.n(m),p=n(2),v=Object(p.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("thead",[n("tr",[n("th",{attrs:{id:"name",scope:"col"}},[e._v(e._s(e.s__("ProjectFileTree|Name")))]),e._v(" "),n("th",{staticClass:"d-none d-sm-table-cell",attrs:{id:"last-commit",scope:"col"}},[e._v(e._s(e.__("Last commit")))]),e._v(" "),n("th",{staticClass:"text-right",attrs:{id:"last-update",scope:"col"}},[e._v(e._s(e.__("Last update")))])])])}),[],!1,null,null,null).exports,h=(n(48),n(21),n(182),n(49),n(1165)),k=n.n(h),g=n(113),b=n(24),y=(n(44),{tree:"folder",commit:"archive"}),S=[{extensions:["pdf"],name:"file-pdf-o"},{extensions:["jpg","jpeg","jif","jfif","jp2","jpx","j2k","j2c","png","gif","tif","tiff","svg","ico","bmp"],name:"file-image-o"},{extensions:["zip","zipx","tar","gz","bz","bzip","xz","rar","7z"],name:"file-archive-o"},{extensions:["mp3","wma","ogg","oga","wav","flac","aac"],name:"file-audio-o"},{extensions:["mp4","m4p","m4v","mpg","mp2","mpeg","mpe","mpv","m2v","avi","mkv","flv","ogv","mov","3gp","3g2"],name:"file-video-o"},{extensions:["doc","dot","docx","docm","dotx","dotm","docb"],name:"file-word-o"},{extensions:["xls","xlt","xlm","xlsx","xlsm","xltx","xltm","xlsb","xla","xlam","xll","xlw"],name:"file-excel-o"},{extensions:["ppt","pot","pps","pptx","pptm","potx","potm","ppam","ppsx","ppsm","sldx","sldm"],name:"file-powerpoint-o"}],N=n(3181),P=n.n(N),w={components:{GlBadge:s.c,GlLink:s.t,GlSkeletonLoading:s.D,GlLoadingIcon:s.u,TimeagoTooltip:g.a,Icon:b.a},directives:{GlTooltip:s.J},apollo:{commit:{query:P.a,variables:function(){return{fileName:this.name,type:this.type,path:this.currentPath,projectPath:this.projectPath}}}},mixins:[u],props:{id:{type:String,required:!0},sha:{type:String,required:!0},projectPath:{type:String,required:!0},currentPath:{type:String,required:!0},name:{type:String,required:!0},path:{type:String,required:!0},type:{type:String,required:!0},url:{type:String,required:!1,default:null},lfsOid:{type:String,required:!1,default:null},submoduleTreeUrl:{type:String,required:!1,default:null},loadingPath:{type:String,required:!1,default:""}},data:function(){return{commit:null}},computed:{routerLinkTo:function(){return this.isFolder?{path:"/-/tree/".concat(escape(this.ref),"/").concat(escape(this.path))}:null},iconName:function(){return"fa-".concat(function(e,t){if(y[e])return y[e];var n=t.split(".").pop(),i=S.find((function(e){return e.extensions.some((function(e){return e===n}))}));return i?i.name:"file-text-o"}(this.type,this.path))},isFolder:function(){return"tree"===this.type},isSubmodule:function(){return"commit"===this.type},linkComponent:function(){return this.isFolder?"router-link":"a"},fullPath:function(){return this.path.replace(new RegExp("^".concat(k()(this.currentPath),"/")),"")},shortSha:function(){return this.sha.slice(0,8)},hasLockLabel:function(){return this.commit&&this.commit.lockLabel}},methods:{openRow:function(e){"A"!==e.target.tagName&&(this.isFolder&&!e.metaKey?this.$router.push(this.routerLinkTo):Object(r.r)(this.url,e.metaKey))}}},j=Object(p.a)(w,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("tr",{staticClass:"tree-item",class:"file_"+e.id,on:{click:e.openRow}},[n("td",{staticClass:"tree-item-file-name"},[e.path===e.loadingPath?n("gl-loading-icon",{staticClass:"d-inline-block align-text-bottom fa-fw",attrs:{size:"sm",inline:""}}):n("i",{staticClass:"fa fa-fw",class:e.iconName,attrs:{"aria-label":e.type,role:"img"}}),e._v(" "),n(e.linkComponent,{tag:"component",staticClass:"str-truncated",attrs:{to:e.routerLinkTo,href:e.url,"data-qa-selector":"file_name_link"}},[e._v("\n      "+e._s(e.fullPath)+"\n    ")]),e._v(" "),e.lfsOid?n("gl-badge",{staticClass:"label-lfs ml-1",attrs:{variant:"default"}},[e._v("LFS")]):e._e(),e._v(" "),e.isSubmodule?[e._v("\n      @ "),n("gl-link",{staticClass:"commit-sha",attrs:{href:e.submoduleTreeUrl}},[e._v(e._s(e.shortSha))])]:e._e(),e._v(" "),e.hasLockLabel?n("icon",{directives:[{name:"gl-tooltip",rawName:"v-gl-tooltip"}],staticClass:"ml-2 vertical-align-middle",attrs:{title:e.commit.lockLabel,name:"lock",size:12}}):e._e()],2),e._v(" "),n("td",{staticClass:"d-none d-sm-table-cell tree-commit"},[e.commit?n("gl-link",{staticClass:"str-truncated-100 tree-commit-link",attrs:{href:e.commit.commitPath,title:e.commit.message}},[e._v("\n      "+e._s(e.commit.message)+"\n    ")]):n("gl-skeleton-loading",{staticClass:"h-auto",attrs:{lines:1}})],1),e._v(" "),n("td",{staticClass:"tree-time-ago text-right"},[e.commit?n("timeago-tooltip",{attrs:{time:e.commit.committedDate}}):n("gl-skeleton-loading",{staticClass:"ml-auto h-auto w-50",attrs:{lines:1}})],1)])}),[],!1,null,null,null).exports,_=(n(43),{components:{GlLoadingIcon:s.u},props:{commitRef:{type:String,required:!0},path:{type:String,required:!0},loadingPath:{type:String,required:!1,default:null}},computed:{parentPath:function(){var e=this.path.split("/");return e.pop(),e.join("/")},parentRoute:function(){return{path:"/-/tree/".concat(escape(this.commitRef),"/").concat(escape(this.parentPath))}}},methods:{clickRow:function(){this.$router.push(this.parentRoute)}}}),x=Object(p.a)(_,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("tr",{staticClass:"tree-item"},[n("td",{staticClass:"tree-item-file-name",attrs:{colspan:"3"},on:{click:function(t){return t.target!==t.currentTarget?null:e.clickRow(t)}}},[e.parentPath===e.loadingPath?n("gl-loading-icon",{staticClass:"d-inline-block align-text-bottom",attrs:{size:"sm",inline:""}}):n("router-link",{attrs:{to:e.parentRoute,"aria-label":e.__("Go to parent")}},[e._v("\n      ..\n    ")])],1)])}),[],!1,null,null,null).exports,O={components:{GlSkeletonLoading:s.D,TableHeader:v,TableRow:j,ParentRow:x},mixins:[u],apollo:{projectPath:{query:f.a}},props:{path:{type:String,required:!0},entries:{type:Object,required:!1,default:function(){return{}}},isLoading:{type:Boolean,required:!0},loadingPath:{type:String,required:!1,default:""}},data:function(){return{projectPath:""}},computed:{tableCaption:function(){return this.isLoading?Object(l.e)(Object(l.a)("Loading files, directories, and submodules in the path %{path} for commit reference %{ref}"),{path:this.path,ref:this.ref}):Object(l.e)(Object(l.a)("Files, directories, and submodules in the path %{path} for commit reference %{ref}"),{path:this.path,ref:this.ref})},showParentRow:function(){return!this.isLoading&&-1===["","/"].indexOf(this.path)}}},C=Object(p.a)(O,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"tree-content-holder"},[n("div",{staticClass:"table-holder bordered-box"},[n("table",{staticClass:"table tree-table",attrs:{"aria-label":e.tableCaption,"aria-live":"polite","data-qa-selector":"file_tree_table"}},[e._m(0),e._v(" "),n("tbody",[n("parent-row",{directives:[{name:"show",rawName:"v-show",value:e.showParentRow,expression:"showParentRow"}],attrs:{"commit-ref":e.ref,path:e.path,"loading-path":e.loadingPath}}),e._v(" "),e._l(e.entries,(function(t){return e._l(t,(function(t){return n("table-row",{key:t.flatPath+"-"+t.id,attrs:{id:t.id,sha:t.sha,"project-path":e.projectPath,"current-path":e.path,name:t.name,path:t.flatPath,type:t.type,url:t.webUrl,"submodule-tree-url":t.treeUrl,"lfs-oid":t.lfsOid,"loading-path":e.loadingPath}})}))})),e._v(" "),e.isLoading?e._l(5,(function(t){return n("tr",{key:t,attrs:{"aria-hidden":"true"}},[n("td",[n("gl-skeleton-loading",{staticClass:"h-auto",attrs:{lines:1}})],1),e._v(" "),n("td",[n("gl-skeleton-loading",{staticClass:"h-auto",attrs:{lines:1}})],1),e._v(" "),n("td",[n("gl-skeleton-loading",{staticClass:"ml-auto h-auto w-50",attrs:{lines:1}})],1)])})):e._e()],2)],1)])])}),[function(){var e=this.$createElement;return(this._self._c||e)("table-header")}],!1,null,null,null).exports,D=n(2748),E=n.n(D),F=n(3183),q=n.n(F),T=n(0),L=n.n(T),$=(n(358),n(11)),V=n(3184),I={apollo:{readme:{query:n.n(V).a,variables:function(){return{url:this.blob.webUrl}},loadingKey:"loading"}},components:{GlLink:s.t,GlLoadingIcon:s.u},props:{blob:{type:Object,required:!0}},data:function(){return{readme:null,loading:0}},watch:{readme:function(e){var t=this;e&&this.$nextTick((function(){Object($.q)(),L()(t.$refs.readme).renderGFM()}))}}},z=Object(p.a)(I,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("article",{staticClass:"file-holder limited-width-container readme-holder"},[n("div",{staticClass:"js-file-title file-title-flex-parent"},[n("div",{staticClass:"file-header-content"},[n("i",{staticClass:"fa fa-file-text-o fa-fw",attrs:{"aria-hidden":"true"}}),e._v(" "),n("gl-link",{attrs:{href:e.blob.webUrl}},[n("strong",[e._v(e._s(e.blob.name))])])],1)]),e._v(" "),n("div",{staticClass:"blob-viewer"},[e.loading>0?n("gl-loading-icon",{staticClass:"my-4 mx-auto",attrs:{size:"md",color:"dark"}}):e.readme?n("div",{ref:"readme",domProps:{innerHTML:e._s(e.readme.html)}}):e._e()],1)])}),[],!1,null,null,null).exports,G=["index","readme"],B=["ad","adoc","asciidoc","creole","markdown","md","mdown","mediawiki","mkd","mkdn","org","rdoc","rst","textile","wiki"],A=function(e){return new RegExp("^(".concat(G.join("|"),")\\.(").concat(B.join("|"),")$"),"i").test(e.name)},U=function(e){return new RegExp("^(".concat(G.join("|"),")(\\.txt)?$"),"i").test(e.name)};function R(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function Q(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var H={components:{FileTable:C,FilePreview:z},mixins:[u],apollo:{projectPath:{query:f.a},vueFileListLfsBadge:{query:q.a}},props:{path:{type:String,required:!1,default:"/"},loadingPath:{type:String,required:!1,default:""}},data:function(){return{projectPath:"",nextPageCursor:"",entries:{trees:[],submodules:[],blobs:[]},isLoadingFiles:!1,vueFileListLfsBadge:!1}},computed:{readme:function(){return(e=this.entries.blobs).find(A)||e.find(U);var e}},watch:{$route:function(){this.entries.trees=[],this.entries.submodules=[],this.entries.blobs=[],this.nextPageCursor="",this.fetchFiles()}},mounted:function(){var e=this;this.$nextTick((function(){return e.fetchFiles()}))},methods:{fetchFiles:function(){var e=this;return this.isLoadingFiles=!0,this.$apollo.query({query:E.a,variables:{projectPath:this.projectPath,ref:this.ref,path:this.path||"/",nextPageCursor:this.nextPageCursor,pageSize:100,vueLfsEnabled:this.vueFileListLfsBadge}}).then((function(t){var n,i=t.data;if(i.errors)throw i.errors;if(null==i?void 0:null===(n=i.project)||void 0===n?void 0:n.repository){var a=e.hasNextPage(i.project.repository.tree);e.isLoadingFiles=!1,e.entries=Object.keys(e.entries).reduce((function(t,n){return function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?R(n,!0).forEach((function(t){Q(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):R(n).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},t,Q({},n,e.normalizeData(n,i.project.repository.tree[n].edges)))}),{}),(null==a?void 0:a.hasNextPage)&&(e.nextPageCursor=a.endCursor,e.fetchFiles())}})).catch((function(e){throw Object(o.a)(Object(l.a)("An error occurred while fetching folder content.")),e}))},normalizeData:function(e,t){return this.entries[e].concat(t.map((function(e){return e.node})))},hasNextPage:function(e){return[].concat(e.trees.pageInfo,e.submodules.pageInfo,e.blobs.pageInfo).find((function(e){return e.hasNextPage}))}}},J=Object(p.a)(H,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("file-table",{attrs:{path:e.path,entries:e.entries,"is-loading":e.isLoadingFiles,"loading-path":e.loadingPath}}),e._v(" "),e.readme?n("file-preview",{attrs:{blob:e.readme}}):e._e()],1)}),[],!1,null,null,null).exports,M=function(e,t){document.querySelectorAll(e).forEach((function(e){return e.classList.toggle("hidden",!t)}))},K=function(e,t,n){var i=document.querySelector(e);i&&(i.action=Object(r.g)(t,n))},W={components:{TreeContent:J},mixins:[{mixins:[u],apollo:{projectPath:{query:f.a}},data:function(){return{projectPath:"",loadingPath:null}},beforeRouteUpdate:function(e,t,n){this.preload(e.params.path,n)},methods:{preload:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"/",t=arguments.length>1?arguments[1]:void 0;return this.loadingPath=e.replace(/^\//,""),this.$apollo.query({query:E.a,variables:{projectPath:this.projectPath,ref:this.ref,path:this.loadingPath,nextPageCursor:"",pageSize:100}}).then((function(){return t()}))}}}],props:{path:{type:String,required:!1,default:"/"}},computed:{isRoot:function(){return"/"===this.path}},watch:{isRoot:{immediate:!0,handler:"updateElements"}},methods:{updateElements:function(e){M(".js-show-on-root",e),M(".js-hide-on-root",!e)}}},X=Object(p.a)(W,(function(){var e=this.$createElement;return(this._self._c||e)("tree-content",{attrs:{path:this.path,"loading-path":this.loadingPath}})}),[],!1,null,null,null).exports,Y={components:{TreePage:X},mounted:function(){this.updateProjectElements(!0)},beforeDestroy:function(){this.updateProjectElements(!1)},methods:{updateProjectElements:function(e){M(".js-show-on-project-root",e)}}},Z=Object(p.a)(Y,(function(){var e=this.$createElement;return(this._self._c||e)("tree-page",{attrs:{path:"/"}})}),[],!1,null,null,null).exports;i.default.use(a.a);var ee=Object(p.a)({},(function(){var e=this.$createElement;return(this._self._c||e)("router-view")}),[],!1,null,null,null).exports,te=n(3185),ne=n.n(te),ie=n(3186),ae=n.n(ie),re="header",oe="divider",le={components:{GlDropdown:s.g,GlDropdownDivider:s.h,GlDropdownHeader:s.i,GlDropdownItem:s.j,Icon:b.a},apollo:{projectShortPath:{query:ne.a},projectPath:{query:f.a},userPermissions:{query:ae.a,variables:function(){return{projectPath:this.projectPath}},update:function(e){var t;return null===(t=e.project)||void 0===t?void 0:t.userPermissions},error:function(e){throw e}}},mixins:[u],props:{currentPath:{type:String,required:!1,default:""},canCollaborate:{type:Boolean,required:!1,default:!1},canEditTree:{type:Boolean,required:!1,default:!1},newBranchPath:{type:String,required:!1,default:null},newTagPath:{type:String,required:!1,default:null},newBlobPath:{type:String,required:!1,default:null},forkNewBlobPath:{type:String,required:!1,default:null},forkNewDirectoryPath:{type:String,required:!1,default:null},forkUploadBlobPath:{type:String,required:!1,default:null}},data:function(){return{projectShortPath:"",projectPath:"",userPermissions:{}}},computed:{pathLinks:function(){var e=this;return this.currentPath.split("/").filter((function(e){return""!==e})).reduce((function(t,n,i){var a="".concat(i>0?t[i].path:"","/").concat(n);return t.concat({name:n,path:a,to:"/-/tree/".concat(escape(e.ref)).concat(escape(a))})}),[{name:this.projectShortPath,path:"/",to:"/-/tree/".concat(escape(this.ref),"/")}])},canCreateMrFromFork:function(){return this.userPermissions.forkProject&&this.userPermissions.createMergeRequestIn},dropdownItems:function(){var e,t=[];return this.canEditTree?t.push({type:re,text:Object(l.a)("This directory")},{attrs:{href:"".concat(this.newBlobPath,"/").concat(this.currentPath?escape(this.currentPath):""),class:"qa-new-file-option"},text:Object(l.a)("New file")},{attrs:{href:"#modal-upload-blob","data-target":"#modal-upload-blob","data-toggle":"modal"},text:Object(l.a)("Upload file")},{attrs:{href:"#modal-create-new-dir","data-target":"#modal-create-new-dir","data-toggle":"modal"},text:Object(l.a)("New directory")}):this.canCreateMrFromFork&&t.push({attrs:{href:this.forkNewBlobPath,"data-method":"post"},text:Object(l.a)("New file")},{attrs:{href:this.forkUploadBlobPath,"data-method":"post"},text:Object(l.a)("Upload file")},{attrs:{href:this.forkNewDirectoryPath,"data-method":"post"},text:Object(l.a)("New directory")}),(null===(e=this.userPermissions)||void 0===e?void 0:e.pushCode)&&t.push({type:oe},{type:re,text:Object(l.a)("This repository")},{attrs:{href:this.newBranchPath},text:Object(l.a)("New branch")},{attrs:{href:this.newTagPath},text:Object(l.a)("New tag")}),t},renderAddToTreeDropdown:function(){return this.canCollaborate||this.canCreateMrFromFork}},methods:{isLast:function(e){return e===this.pathLinks.length-1},getComponent:function(e){switch(e){case oe:return"gl-dropdown-divider";case re:return"gl-dropdown-header";default:return"gl-dropdown-item"}}}},se=Object(p.a)(le,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("nav",{attrs:{"aria-label":e.__("Files breadcrumb")}},[n("ol",{staticClass:"breadcrumb repo-breadcrumb"},[e._l(e.pathLinks,(function(t,i){return n("li",{key:i,staticClass:"breadcrumb-item"},[n("router-link",{attrs:{to:t.to,"aria-current":e.isLast(i)?"page":null}},[e._v("\n        "+e._s(t.name)+"\n      ")])],1)})),e._v(" "),e.renderAddToTreeDropdown?n("li",{staticClass:"breadcrumb-item"},[n("gl-dropdown",{attrs:{"toggle-class":"add-to-tree qa-add-to-tree ml-1"}},[n("template",{slot:"button-content"},[n("span",{staticClass:"sr-only"},[e._v(e._s(e.__("Add to tree")))]),e._v(" "),n("icon",{staticClass:"float-left",attrs:{name:"plus",size:16}}),e._v(" "),n("icon",{staticClass:"float-left",attrs:{name:"chevron-down",size:16}})],1),e._v(" "),e._l(e.dropdownItems,(function(t,i){return[n(e.getComponent(t.type),e._b({key:i,tag:"component"},"component",t.attrs,!1),[e._v("\n            "+e._s(t.text)+"\n          ")])]}))],2)],1):e._e()],2)])}),[],!1,null,null,null).exports,de=n(636),ce=n.n(de),ue=n(105),me=n(115),fe=n(140),pe=n(3187),ve=n.n(pe);function he(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function ke(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var ge={components:{Icon:b.a,UserAvatarLink:ue.a,TimeagoTooltip:g.a,ClipboardButton:fe.a,CiIcon:me.a,GlLink:s.t,GlButton:s.d,GlLoadingIcon:s.u},directives:{GlTooltip:s.J},mixins:[u],apollo:{projectPath:{query:f.a},commit:{query:ve.a,variables:function(){return{projectPath:this.projectPath,ref:this.ref,path:this.currentPath.replace(/^\//,"")}},update:function(e){var t,n,i,a,r,o,l,s,d=null===(t=e.project)||void 0===t?void 0:null===(n=t.repository)||void 0===n?void 0:null===(i=n.tree)||void 0===i?void 0:null===(a=i.lastCommit)||void 0===a?void 0:null===(r=a.pipelines)||void 0===r?void 0:r.edges;return function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?he(n,!0).forEach((function(t){ke(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):he(n).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},null===(o=e.project)||void 0===o?void 0:null===(l=o.repository)||void 0===l?void 0:null===(s=l.tree)||void 0===s?void 0:s.lastCommit,{pipeline:(null==d?void 0:d.length)&&d[0].node})},context:{isSingleRequest:!0},error:function(e){throw e}}},props:{currentPath:{type:String,required:!1,default:""}},data:function(){return{projectPath:"",commit:null,showDescription:!1}},computed:{statusTitle:function(){return Object(l.e)(Object(l.d)("Commits|Commit: %{commitText}"),{commitText:this.commit.pipeline.detailedStatus.text})},isLoading:function(){return this.$apollo.queries.commit.loading},showCommitId:function(){return this.commit.sha.substr(0,8)}},watch:{currentPath:function(){this.commit=null}},methods:{toggleShowDescription:function(){this.showDescription=!this.showDescription}},defaultAvatarUrl:ce.a},be=(n(3188),Object(p.a)(ge,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"info-well d-none d-sm-flex project-last-commit commit p-3"},[e.isLoading?n("gl-loading-icon",{staticClass:"m-auto",attrs:{size:"md",color:"dark"}}):e.commit?[e.commit.author?n("user-avatar-link",{staticClass:"avatar-cell",attrs:{"link-href":e.commit.author.webUrl,"img-src":e.commit.author.avatarUrl,"img-size":40}}):n("span",{staticClass:"avatar-cell user-avatar-link"},[n("img",{staticClass:"avatar s40",attrs:{src:e.commit.authorGravatar||e.$options.defaultAvatarUrl,width:"40",height:"40"}})]),e._v(" "),n("div",{staticClass:"commit-detail flex-list"},[n("div",{staticClass:"commit-content qa-commit-content"},[n("gl-link",{staticClass:"commit-row-message item-title",class:{"font-italic":!e.commit.message},attrs:{href:e.commit.webUrl}},[e._v("\n          "+e._s(e.commit.title)+"\n        ")]),e._v(" "),e.commit.description?n("gl-button",{staticClass:"text-expander",class:{open:e.showDescription},attrs:{"aria-label":e.__("Show commit description")},on:{click:e.toggleShowDescription}},[n("icon",{attrs:{name:"ellipsis_h",size:10}})],1):e._e(),e._v(" "),n("div",{staticClass:"committer"},[e.commit.author?n("gl-link",{staticClass:"commit-author-link js-user-link",attrs:{href:e.commit.author.webUrl}},[e._v("\n            "+e._s(e.commit.author.name)+"\n          ")]):[e._v("\n            "+e._s(e.commit.authorName)+"\n          ")],e._v("\n          "+e._s(e.s__("LastCommit|authored"))+"\n          "),n("timeago-tooltip",{attrs:{time:e.commit.authoredDate,"tooltip-placement":"bottom"}})],2),e._v(" "),e.commit.description?n("pre",{staticClass:"commit-row-description append-bottom-8",class:{"d-block":e.showDescription}},[e._v(e._s(e.commit.description))]):e._e()],1),e._v(" "),n("div",{staticClass:"commit-actions flex-row"},[e.commit.signatureHtml?n("div",{domProps:{innerHTML:e._s(e.commit.signatureHtml)}}):e._e(),e._v(" "),e.commit.pipeline?n("div",{staticClass:"ci-status-link"},[n("gl-link",{directives:[{name:"gl-tooltip",rawName:"v-gl-tooltip.left",modifiers:{left:!0}}],staticClass:"js-commit-pipeline",attrs:{href:e.commit.pipeline.detailedStatus.detailsPath,title:e.statusTitle}},[n("ci-icon",{attrs:{status:e.commit.pipeline.detailedStatus,size:24,"aria-label":e.statusTitle}})],1)],1):e._e(),e._v(" "),n("div",{staticClass:"commit-sha-group d-flex"},[n("div",{staticClass:"label label-monospace monospace"},[e._v("\n            "+e._s(e.showCommitId)+"\n          ")]),e._v(" "),n("clipboard-button",{attrs:{text:e.commit.sha,title:e.__("Copy commit SHA"),"tooltip-placement":"bottom"}})],1)])])]:e._e()],2)}),[],!1,null,"079796d8",null).exports),ye={components:{GlLink:s.t},props:{path:{type:String,required:!0},text:{type:String,required:!0},cssClass:{type:String,required:!1,default:null}}},Se=Object(p.a)(ye,(function(){var e=this.$createElement;return(this._self._c||e)("gl-link",{staticClass:"btn",class:this.cssClass,attrs:{href:this.path}},[this._v(this._s(this.text))])}),[],!1,null,null,null).exports,Ne={components:{GlLink:s.t},props:{currentPath:{type:String,required:!1,default:null},links:{type:Array,required:!0}},computed:{normalizedLinks:function(){var e=this;return this.links.map((function(t){return{text:t.text,path:"".concat(t.path,"?path=").concat(e.currentPath)}}))}}},Pe=Object(p.a)(Ne,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("section",{staticClass:"border-top pt-1 mt-1"},[n("h5",{staticClass:"m-0 dropdown-bold-header"},[e._v(e._s(e.__("Download this directory")))]),e._v(" "),n("div",{staticClass:"dropdown-menu-content"},[n("div",{staticClass:"btn-group ml-0 w-100"},e._l(e.normalizedLinks,(function(t,i){return n("gl-link",{key:i,staticClass:"btn btn-xs",class:{"btn-primary":0===i},attrs:{href:t.path}},[e._v("\n        "+e._s(t.text)+"\n      ")])})),1)])])}),[],!1,null,null,null).exports,we=(n(40),n(329)),je=n(1303),_e=n(5),xe=n(327),Oe=n(3190);n(31),n(34),n(56),n(22);function Ce(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function De(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Ee(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:function(){};return e.map((function(e){return function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Ce(n,!0).forEach((function(t){De(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Ce(n).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({sha:e.commit.id,message:e.commit.message,committedDate:e.commit.committed_date,commitPath:e.commit_path,fileName:e.file_name,filePath:"".concat(t,"/").concat(e.file_name),type:e.type,__typename:"LogTreeCommit"},n(e))}))}var Fe,qe=n(3191),Te=n.n(qe);function Le(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var $e=[];function Ve(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function Ie(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}i.default.use(we.a);var ze=new je.b({introspectionQueryResultData:Oe}),Ge=Object(xe.a)({Query:{commit:function(e,t){var n=t.path,i=t.fileName,a=t.type;return new Promise((function(e){!function e(t,n,i){var a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;if(a&&$e.push(a),Fe)return Fe;var r=t.readQuery({query:f.a}).projectPath,o=t.readQuery({query:c.a}).ref;return Fe=_e.a.get("".concat(gon.relative_url_root,"/").concat(r,"/-/refs/").concat(escape(o),"/logs_tree/").concat(escape(n.replace(/^\//,""))),{params:{format:"json",offset:i}}).then((function(i){var a=i.data,r=i.headers["more-logs-offset"],o=t.readQuery({query:Te.a}).commits,l=[].concat(Le(o),Le(Ee(a,n)));t.writeQuery({query:Te.a,data:{commits:l}}),$e.forEach((function(e){return function(e,t,n){var i=n.resolve,a=n.entry,r=e.find((function(e){return e.filePath==="".concat(t,"/").concat(a.name)&&e.type===a.type}));r&&i(r)}(l,n,e)})),Fe=null,r?e(t,n,r):$e=[]}))}(Ge,n,"0",{resolve:e,entry:{name:i,type:a}})}))},readme:function(e,t){var n=t.url;return _e.a.get(n,{params:{viewer:"rich",format:"json"}}).then((function(e){return function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Ve(n,!0).forEach((function(t){Ie(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Ve(n).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},e.data,{__typename:"ReadmeFile"})}))}}},{cacheConfig:{fragmentMatcher:ze,dataIdFromObject:function(e){switch(e.__typename){case"TreeEntry":case"Submodule":case"Blob":return"".concat(escape(e.flatPath),"-").concat(e.id);default:return e.id||e._id}}}}),Be=new we.a({defaultClient:Ge}),Ae=n(720);function Ue(){var e,t,n,o=document.getElementById("js-tree-list"),s=o.dataset,d=s.projectPath,c=s.projectShortPath,u=s.ref,m=s.fullName,f=(t=d,n=u,new a.a({mode:"history",base:Object(r.g)(gon.relative_url_root||"",t),routes:[{path:"(/-)?/tree/".concat(escape(n),"/:path*"),name:"treePath",component:X,props:function(e){var t;return{path:(null===(t=e.params.path)||void 0===t?void 0:t.replace(/^\//,""))||"/"}}},{path:"/",name:"projectRoot",component:Z}]}));Be.clients.defaultClient.cache.writeData({data:{projectPath:d,projectShortPath:c,ref:u,vueFileListLfsBadge:(null===(e=gon.features)||void 0===e?void 0:e.vueFileListLfsBadge)||!1,commits:[]}}),f.afterEach((function(e){var t=e.params.path;Object(Ae.a)(t,u,m)}));var p=document.getElementById("js-repo-breadcrumb");if(p){var v=p.dataset,h=v.canCollaborate,k=v.canEditTree,g=v.newBranchPath,b=v.newTagPath,y=v.newBlobPath,S=v.forkNewBlobPath,N=v.forkNewDirectoryPath,P=v.forkUploadBlobPath,w=v.uploadPath,j=v.newDirPath;f.afterEach((function(e){var t=e.params.path,n=void 0===t?"/":t;K(".js-upload-blob-form",w,n),K(".js-create-dir-form",j,n)})),new i.default({el:p,router:f,apolloProvider:Be,render:function(e){return e(se,{props:{currentPath:this.$route.params.path,canCollaborate:Object($.F)(h),canEditTree:Object($.F)(k),newBranchPath:g,newTagPath:b,newBlobPath:y,forkNewBlobPath:S,forkNewDirectoryPath:N,forkUploadBlobPath:P}})}})}new i.default({el:document.getElementById("js-last-commit"),router:f,apolloProvider:Be,render:function(e){return e(be,{props:{currentPath:this.$route.params.path}})}});var _=document.getElementById("js-tree-history-link"),x=_.dataset.historyLink;new i.default({el:_,router:f,render:function(e){return e(Se,{props:{path:"".concat(x,"/").concat(this.$route.params.path?escape(this.$route.params.path):""),text:Object(l.a)("History")}})}});var O=document.getElementById("js-tree-web-ide-link");O&&new i.default({el:O,router:f,render:function(e){return e(Se,{props:{path:Object(r.s)("/".concat(d,"/edit/").concat(u,"/-/").concat(this.$route.params.path||"")),text:Object(l.a)("Web IDE"),cssClass:"qa-web-ide-button"}})}});var C=document.getElementById("js-directory-downloads");return C&&new i.default({el:C,router:f,render:function(e){var t=this.$route.params.path||"/";return"/"!==t?e(Pe,{props:{currentPath:t.replace(/^\//,""),links:JSON.parse(C.dataset.links)}}):null}}),new i.default({el:o,router:f,apolloProvider:Be,render:function(e){return e(ee)}}),{router:f,data:s}}n.d(t,"default",(function(){return Ue}))},2550:function(e,t){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"getProjectPath"},variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"projectPath"},arguments:[],directives:[]}]}}],loc:{start:0,end:39}};n.loc.source={body:"query getProjectPath {\n  projectPath\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var i={};function a(e,t){for(var n=0;n<e.definitions.length;n++){var i=e.definitions[n];if(i.name&&i.name.value==t)return i}}n.definitions.forEach((function(e){if(e.name){var t=new Set;!function e(t,n){if("FragmentSpread"===t.kind)n.add(t.name.value);else if("VariableDefinition"===t.kind){var i=t.type;"NamedType"===i.kind&&n.add(i.name.value)}t.selectionSet&&t.selectionSet.selections.forEach((function(t){e(t,n)})),t.variableDefinitions&&t.variableDefinitions.forEach((function(t){e(t,n)})),t.definitions&&t.definitions.forEach((function(t){e(t,n)}))}(e,t),i[e.name.value]=t}})),e.exports=n,e.exports.getProjectPath=function(e,t){var n={kind:e.kind,definitions:[a(e,t)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);for(var r=i[t]||new Set,o=new Set,l=new Set(r);l.size>0;){var s=l;l=new Set,s.forEach((function(e){o.has(e)||(o.add(e),(i[e]||new Set).forEach((function(e){l.add(e)})))}))}return o.forEach((function(t){var i=a(e,t);i&&n.definitions.push(i)})),n}(n,"getProjectPath")},2636:function(e,t,n){var i=n(3189);"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,n(110).default)("1de75b37",i,!0,{})},2746:function(e,t){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"getRef"},variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"ref"},arguments:[],directives:[{kind:"Directive",name:{kind:"Name",value:"client"},arguments:[]}]}]}}],loc:{start:0,end:31}};n.loc.source={body:"query getRef {\n  ref @client\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var i={};function a(e,t){for(var n=0;n<e.definitions.length;n++){var i=e.definitions[n];if(i.name&&i.name.value==t)return i}}n.definitions.forEach((function(e){if(e.name){var t=new Set;!function e(t,n){if("FragmentSpread"===t.kind)n.add(t.name.value);else if("VariableDefinition"===t.kind){var i=t.type;"NamedType"===i.kind&&n.add(i.name.value)}t.selectionSet&&t.selectionSet.selections.forEach((function(t){e(t,n)})),t.variableDefinitions&&t.variableDefinitions.forEach((function(t){e(t,n)})),t.definitions&&t.definitions.forEach((function(t){e(t,n)}))}(e,t),i[e.name.value]=t}})),e.exports=n,e.exports.getRef=function(e,t){var n={kind:e.kind,definitions:[a(e,t)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);for(var r=i[t]||new Set,o=new Set,l=new Set(r);l.size>0;){var s=l;l=new Set,s.forEach((function(e){o.has(e)||(o.add(e),(i[e]||new Set).forEach((function(e){l.add(e)})))}))}return o.forEach((function(t){var i=a(e,t);i&&n.definitions.push(i)})),n}(n,"getRef")},2747:function(e,t){var n={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"TreeEntryCommit"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"LogTreeCommit"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"sha"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"message"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"committedDate"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"commitPath"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"fileName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]}]}}],loc:{start:0,end:109}};n.loc.source={body:"fragment TreeEntryCommit on LogTreeCommit {\n  sha\n  message\n  committedDate\n  commitPath\n  fileName\n  type\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=n},2748:function(e,t,n){var i={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"TreeEntry"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Entry"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"sha"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"flatPath"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]}]}},{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"getFiles"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"projectPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}}},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"path"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"ref"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"pageSize"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}}},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"nextPageCursor"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"vueLfsEnabled"}},type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},defaultValue:{kind:"BooleanValue",value:!1}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"projectPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"repository"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"tree"},arguments:[{kind:"Argument",name:{kind:"Name",value:"path"},value:{kind:"Variable",name:{kind:"Name",value:"path"}}},{kind:"Argument",name:{kind:"Name",value:"ref"},value:{kind:"Variable",name:{kind:"Name",value:"ref"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"trees"},arguments:[{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"Variable",name:{kind:"Name",value:"pageSize"}}},{kind:"Argument",name:{kind:"Name",value:"after"},value:{kind:"Variable",name:{kind:"Name",value:"nextPageCursor"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"edges"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"node"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"TreeEntry"},directives:[]},{kind:"Field",name:{kind:"Name",value:"webUrl"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"pageInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"PageInfo"},directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"submodules"},arguments:[{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"Variable",name:{kind:"Name",value:"pageSize"}}},{kind:"Argument",name:{kind:"Name",value:"after"},value:{kind:"Variable",name:{kind:"Name",value:"nextPageCursor"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"edges"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"node"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"TreeEntry"},directives:[]},{kind:"Field",name:{kind:"Name",value:"webUrl"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"treeUrl"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"pageInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"PageInfo"},directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"blobs"},arguments:[{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"Variable",name:{kind:"Name",value:"pageSize"}}},{kind:"Argument",name:{kind:"Name",value:"after"},value:{kind:"Variable",name:{kind:"Name",value:"nextPageCursor"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"edges"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"node"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"TreeEntry"},directives:[]},{kind:"Field",name:{kind:"Name",value:"webUrl"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"lfsOid"},arguments:[],directives:[{kind:"Directive",name:{kind:"Name",value:"include"},arguments:[{kind:"Argument",name:{kind:"Name",value:"if"},value:{kind:"Variable",name:{kind:"Name",value:"vueLfsEnabled"}}}]}]}]}}]}},{kind:"Field",name:{kind:"Name",value:"pageInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"PageInfo"},directives:[]}]}}]}}]}}]}}]}}]}}],loc:{start:0,end:1178}};i.loc.source={body:'#import "~/graphql_shared/fragments/pageInfo.fragment.graphql"\n\nfragment TreeEntry on Entry {\n  id\n  sha\n  name\n  flatPath\n  type\n}\n\nquery getFiles(\n  $projectPath: ID!\n  $path: String\n  $ref: String!\n  $pageSize: Int!\n  $nextPageCursor: String\n  $vueLfsEnabled: Boolean = false\n) {\n  project(fullPath: $projectPath) {\n    repository {\n      tree(path: $path, ref: $ref) {\n        trees(first: $pageSize, after: $nextPageCursor) {\n          edges {\n            node {\n              ...TreeEntry\n              webUrl\n            }\n          }\n          pageInfo {\n            ...PageInfo\n          }\n        }\n        submodules(first: $pageSize, after: $nextPageCursor) {\n          edges {\n            node {\n              ...TreeEntry\n              webUrl\n              treeUrl\n            }\n          }\n          pageInfo {\n            ...PageInfo\n          }\n        }\n        blobs(first: $pageSize, after: $nextPageCursor) {\n          edges {\n            node {\n              ...TreeEntry\n              webUrl\n              lfsOid @include(if: $vueLfsEnabled)\n            }\n          }\n          pageInfo {\n            ...PageInfo\n          }\n        }\n      }\n    }\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};i.definitions=i.definitions.concat(n(3182).definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var t=e.name.value;return!a[t]&&(a[t]=!0,!0)})));var r={};function o(e,t){for(var n=0;n<e.definitions.length;n++){var i=e.definitions[n];if(i.name&&i.name.value==t)return i}}i.definitions.forEach((function(e){if(e.name){var t=new Set;!function e(t,n){if("FragmentSpread"===t.kind)n.add(t.name.value);else if("VariableDefinition"===t.kind){var i=t.type;"NamedType"===i.kind&&n.add(i.name.value)}t.selectionSet&&t.selectionSet.selections.forEach((function(t){e(t,n)})),t.variableDefinitions&&t.variableDefinitions.forEach((function(t){e(t,n)})),t.definitions&&t.definitions.forEach((function(t){e(t,n)}))}(e,t),r[e.name.value]=t}})),e.exports=i,e.exports.getFiles=function(e,t){var n={kind:e.kind,definitions:[o(e,t)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);for(var i=r[t]||new Set,a=new Set,l=new Set(i);l.size>0;){var s=l;l=new Set,s.forEach((function(e){a.has(e)||(a.add(e),(r[e]||new Set).forEach((function(e){l.add(e)})))}))}return a.forEach((function(t){var i=o(e,t);i&&n.definitions.push(i)})),n}(i,"getFiles")},3181:function(e,t,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"getCommit"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"fileName"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"type"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"path"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"commit"},arguments:[{kind:"Argument",name:{kind:"Name",value:"path"},value:{kind:"Variable",name:{kind:"Name",value:"path"}}},{kind:"Argument",name:{kind:"Name",value:"fileName"},value:{kind:"Variable",name:{kind:"Name",value:"fileName"}}},{kind:"Argument",name:{kind:"Name",value:"type"},value:{kind:"Variable",name:{kind:"Name",value:"type"}}}],directives:[{kind:"Directive",name:{kind:"Name",value:"client"},arguments:[]}],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"TreeEntryCommit"},directives:[]}]}}]}}],loc:{start:0,end:230}};i.loc.source={body:'#import "ee_else_ce/repository/queries/commit.fragment.graphql"\n\nquery getCommit($fileName: String!, $type: String!, $path: String!) {\n  commit(path: $path, fileName: $fileName, type: $type) @client {\n    ...TreeEntryCommit\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};i.definitions=i.definitions.concat(n(2747).definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var t=e.name.value;return!a[t]&&(a[t]=!0,!0)})));var r={};function o(e,t){for(var n=0;n<e.definitions.length;n++){var i=e.definitions[n];if(i.name&&i.name.value==t)return i}}i.definitions.forEach((function(e){if(e.name){var t=new Set;!function e(t,n){if("FragmentSpread"===t.kind)n.add(t.name.value);else if("VariableDefinition"===t.kind){var i=t.type;"NamedType"===i.kind&&n.add(i.name.value)}t.selectionSet&&t.selectionSet.selections.forEach((function(t){e(t,n)})),t.variableDefinitions&&t.variableDefinitions.forEach((function(t){e(t,n)})),t.definitions&&t.definitions.forEach((function(t){e(t,n)}))}(e,t),r[e.name.value]=t}})),e.exports=i,e.exports.getCommit=function(e,t){var n={kind:e.kind,definitions:[o(e,t)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);for(var i=r[t]||new Set,a=new Set,l=new Set(i);l.size>0;){var s=l;l=new Set,s.forEach((function(e){a.has(e)||(a.add(e),(r[e]||new Set).forEach((function(e){l.add(e)})))}))}return a.forEach((function(t){var i=o(e,t);i&&n.definitions.push(i)})),n}(i,"getCommit")},3182:function(e,t){var n={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"PageInfo"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"PageInfo"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"hasNextPage"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"endCursor"},arguments:[],directives:[]}]}}],loc:{start:0,end:60}};n.loc.source={body:"fragment PageInfo on PageInfo {\n  hasNextPage\n  endCursor\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=n},3183:function(e,t){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"getProjectShortPath"},variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"vueFileListLfsBadge"},arguments:[],directives:[{kind:"Directive",name:{kind:"Name",value:"client"},arguments:[]}]}]}}],loc:{start:0,end:60}};n.loc.source={body:"query getProjectShortPath {\n  vueFileListLfsBadge @client\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var i={};function a(e,t){for(var n=0;n<e.definitions.length;n++){var i=e.definitions[n];if(i.name&&i.name.value==t)return i}}n.definitions.forEach((function(e){if(e.name){var t=new Set;!function e(t,n){if("FragmentSpread"===t.kind)n.add(t.name.value);else if("VariableDefinition"===t.kind){var i=t.type;"NamedType"===i.kind&&n.add(i.name.value)}t.selectionSet&&t.selectionSet.selections.forEach((function(t){e(t,n)})),t.variableDefinitions&&t.variableDefinitions.forEach((function(t){e(t,n)})),t.definitions&&t.definitions.forEach((function(t){e(t,n)}))}(e,t),i[e.name.value]=t}})),e.exports=n,e.exports.getProjectShortPath=function(e,t){var n={kind:e.kind,definitions:[a(e,t)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);for(var r=i[t]||new Set,o=new Set,l=new Set(r);l.size>0;){var s=l;l=new Set,s.forEach((function(e){o.has(e)||(o.add(e),(i[e]||new Set).forEach((function(e){l.add(e)})))}))}return o.forEach((function(t){var i=a(e,t);i&&n.definitions.push(i)})),n}(n,"getProjectShortPath")},3184:function(e,t){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"getReadme"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"url"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"readme"},arguments:[{kind:"Argument",name:{kind:"Name",value:"url"},value:{kind:"Variable",name:{kind:"Name",value:"url"}}}],directives:[{kind:"Directive",name:{kind:"Name",value:"client"},arguments:[]}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"html"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:78}};n.loc.source={body:"query getReadme($url: String!) {\n  readme(url: $url) @client {\n    html\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var i={};function a(e,t){for(var n=0;n<e.definitions.length;n++){var i=e.definitions[n];if(i.name&&i.name.value==t)return i}}n.definitions.forEach((function(e){if(e.name){var t=new Set;!function e(t,n){if("FragmentSpread"===t.kind)n.add(t.name.value);else if("VariableDefinition"===t.kind){var i=t.type;"NamedType"===i.kind&&n.add(i.name.value)}t.selectionSet&&t.selectionSet.selections.forEach((function(t){e(t,n)})),t.variableDefinitions&&t.variableDefinitions.forEach((function(t){e(t,n)})),t.definitions&&t.definitions.forEach((function(t){e(t,n)}))}(e,t),i[e.name.value]=t}})),e.exports=n,e.exports.getReadme=function(e,t){var n={kind:e.kind,definitions:[a(e,t)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);for(var r=i[t]||new Set,o=new Set,l=new Set(r);l.size>0;){var s=l;l=new Set,s.forEach((function(e){o.has(e)||(o.add(e),(i[e]||new Set).forEach((function(e){l.add(e)})))}))}return o.forEach((function(t){var i=a(e,t);i&&n.definitions.push(i)})),n}(n,"getReadme")},3185:function(e,t){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"getProjectShortPath"},variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"projectShortPath"},arguments:[],directives:[{kind:"Directive",name:{kind:"Name",value:"client"},arguments:[]}]}]}}],loc:{start:0,end:57}};n.loc.source={body:"query getProjectShortPath {\n  projectShortPath @client\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var i={};function a(e,t){for(var n=0;n<e.definitions.length;n++){var i=e.definitions[n];if(i.name&&i.name.value==t)return i}}n.definitions.forEach((function(e){if(e.name){var t=new Set;!function e(t,n){if("FragmentSpread"===t.kind)n.add(t.name.value);else if("VariableDefinition"===t.kind){var i=t.type;"NamedType"===i.kind&&n.add(i.name.value)}t.selectionSet&&t.selectionSet.selections.forEach((function(t){e(t,n)})),t.variableDefinitions&&t.variableDefinitions.forEach((function(t){e(t,n)})),t.definitions&&t.definitions.forEach((function(t){e(t,n)}))}(e,t),i[e.name.value]=t}})),e.exports=n,e.exports.getProjectShortPath=function(e,t){var n={kind:e.kind,definitions:[a(e,t)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);for(var r=i[t]||new Set,o=new Set,l=new Set(r);l.size>0;){var s=l;l=new Set,s.forEach((function(e){o.has(e)||(o.add(e),(i[e]||new Set).forEach((function(e){l.add(e)})))}))}return o.forEach((function(t){var i=a(e,t);i&&n.definitions.push(i)})),n}(n,"getProjectShortPath")},3186:function(e,t){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"getPermissions"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"projectPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"projectPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"userPermissions"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"pushCode"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"forkProject"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"createMergeRequestIn"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:172}};n.loc.source={body:"query getPermissions($projectPath: ID!) {\n  project(fullPath: $projectPath) {\n    userPermissions {\n      pushCode\n      forkProject\n      createMergeRequestIn\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var i={};function a(e,t){for(var n=0;n<e.definitions.length;n++){var i=e.definitions[n];if(i.name&&i.name.value==t)return i}}n.definitions.forEach((function(e){if(e.name){var t=new Set;!function e(t,n){if("FragmentSpread"===t.kind)n.add(t.name.value);else if("VariableDefinition"===t.kind){var i=t.type;"NamedType"===i.kind&&n.add(i.name.value)}t.selectionSet&&t.selectionSet.selections.forEach((function(t){e(t,n)})),t.variableDefinitions&&t.variableDefinitions.forEach((function(t){e(t,n)})),t.definitions&&t.definitions.forEach((function(t){e(t,n)}))}(e,t),i[e.name.value]=t}})),e.exports=n,e.exports.getPermissions=function(e,t){var n={kind:e.kind,definitions:[a(e,t)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);for(var r=i[t]||new Set,o=new Set,l=new Set(r);l.size>0;){var s=l;l=new Set,s.forEach((function(e){o.has(e)||(o.add(e),(i[e]||new Set).forEach((function(e){l.add(e)})))}))}return o.forEach((function(t){var i=a(e,t);i&&n.definitions.push(i)})),n}(n,"getPermissions")},3187:function(e,t){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"pathLastCommit"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"projectPath"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}}},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"path"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"ref"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"project"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fullPath"},value:{kind:"Variable",name:{kind:"Name",value:"projectPath"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"repository"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"tree"},arguments:[{kind:"Argument",name:{kind:"Name",value:"path"},value:{kind:"Variable",name:{kind:"Name",value:"path"}}},{kind:"Argument",name:{kind:"Name",value:"ref"},value:{kind:"Variable",name:{kind:"Name",value:"ref"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"lastCommit"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"sha"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"title"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"message"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"webUrl"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"authoredDate"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"authorName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"authorGravatar"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"author"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"avatarUrl"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"webUrl"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"signatureHtml"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"pipelines"},arguments:[{kind:"Argument",name:{kind:"Name",value:"ref"},value:{kind:"Variable",name:{kind:"Name",value:"ref"}}},{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"IntValue",value:"1"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"edges"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"node"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"detailedStatus"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"detailsPath"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"icon"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tooltip"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"text"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"group"},arguments:[],directives:[]}]}}]}}]}}]}}]}}]}}]}}]}}]}}],loc:{start:0,end:785}};n.loc.source={body:"query pathLastCommit($projectPath: ID!, $path: String, $ref: String!) {\n  project(fullPath: $projectPath) {\n    repository {\n      tree(path: $path, ref: $ref) {\n        lastCommit {\n          sha\n          title\n          description\n          message\n          webUrl\n          authoredDate\n          authorName\n          authorGravatar\n          author {\n            name\n            avatarUrl\n            webUrl\n          }\n          signatureHtml\n          pipelines(ref: $ref, first: 1) {\n            edges {\n              node {\n                detailedStatus {\n                  detailsPath\n                  icon\n                  tooltip\n                  text\n                  group\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var i={};function a(e,t){for(var n=0;n<e.definitions.length;n++){var i=e.definitions[n];if(i.name&&i.name.value==t)return i}}n.definitions.forEach((function(e){if(e.name){var t=new Set;!function e(t,n){if("FragmentSpread"===t.kind)n.add(t.name.value);else if("VariableDefinition"===t.kind){var i=t.type;"NamedType"===i.kind&&n.add(i.name.value)}t.selectionSet&&t.selectionSet.selections.forEach((function(t){e(t,n)})),t.variableDefinitions&&t.variableDefinitions.forEach((function(t){e(t,n)})),t.definitions&&t.definitions.forEach((function(t){e(t,n)}))}(e,t),i[e.name.value]=t}})),e.exports=n,e.exports.pathLastCommit=function(e,t){var n={kind:e.kind,definitions:[a(e,t)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);for(var r=i[t]||new Set,o=new Set,l=new Set(r);l.size>0;){var s=l;l=new Set,s.forEach((function(e){o.has(e)||(o.add(e),(i[e]||new Set).forEach((function(e){l.add(e)})))}))}return o.forEach((function(t){var i=a(e,t);i&&n.definitions.push(i)})),n}(n,"pathLastCommit")},3188:function(e,t,n){"use strict";var i=n(2636);n.n(i).a},3189:function(e,t,n){(e.exports=n(109)(!1)).push([e.i,"\n.commit[data-v-079796d8] {\n  min-height: 4.75rem;\n}\n",""])},3190:function(e){e.exports=JSON.parse('{"__schema":{"types":[{"kind":"INTERFACE","name":"Entry","possibleTypes":[{"name":"Blob"},{"name":"Submodule"},{"name":"TreeEntry"}]}]}}')},3191:function(e,t,n){var i={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"getCommits"},variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"commits"},arguments:[],directives:[{kind:"Directive",name:{kind:"Name",value:"client"},arguments:[]}],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"TreeEntryCommit"},directives:[]}]}}]}}],loc:{start:0,end:133}};i.loc.source={body:'#import "ee_else_ce/repository/queries/commit.fragment.graphql"\n\nquery getCommits {\n  commits @client {\n    ...TreeEntryCommit\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var a={};i.definitions=i.definitions.concat(n(2747).definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var t=e.name.value;return!a[t]&&(a[t]=!0,!0)})));var r={};function o(e,t){for(var n=0;n<e.definitions.length;n++){var i=e.definitions[n];if(i.name&&i.name.value==t)return i}}i.definitions.forEach((function(e){if(e.name){var t=new Set;!function e(t,n){if("FragmentSpread"===t.kind)n.add(t.name.value);else if("VariableDefinition"===t.kind){var i=t.type;"NamedType"===i.kind&&n.add(i.name.value)}t.selectionSet&&t.selectionSet.selections.forEach((function(t){e(t,n)})),t.variableDefinitions&&t.variableDefinitions.forEach((function(t){e(t,n)})),t.definitions&&t.definitions.forEach((function(t){e(t,n)}))}(e,t),r[e.name.value]=t}})),e.exports=i,e.exports.getCommits=function(e,t){var n={kind:e.kind,definitions:[o(e,t)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);for(var i=r[t]||new Set,a=new Set,l=new Set(i);l.size>0;){var s=l;l=new Set,s.forEach((function(e){a.has(e)||(a.add(e),(r[e]||new Set).forEach((function(e){l.add(e)})))}))}return a.forEach((function(t){var i=o(e,t);i&&n.definitions.push(i)})),n}(i,"getCommits")},720:function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return a}));n(18),n(43),n(59),n(44);var i=function(e,t,n){if(e){var i=e.replace(/^\//,""),a=""===i;document.title="".concat(a?"Files":i," · ").concat(t," · ").concat(n," ").concat("· GitLab")}else document.title="".concat(n," ").concat("· GitLab")};function a(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:document,n=t.title,i=(void 0===n?"":n).split(" · ");i.length>1&&(i[1]=e,t.title=i.join(" · "))}}}]);
//# sourceMappingURL=29.3059dc3c.chunk.js.map